Logi(files, journald) -> Promtail -> Grafana loki <- Grafana -> Prometheus ↓
   ↑-----------------------------------------------------------------------


Promtail - читает логи и отправляет их в loki

Grafana loki - хранилище логов, сохраняет, индексирует (метки) и отдаёт логи по запросу

Prometheus - хранилище метрики(/metrix) - это бд как и loki, хранит как time-series (временные ряды)

Grafana - визуализация метрик, логов, алертов и др данных (интерфейс UI)



Promtail — агент, который читает логи из файлов (например, /var/log/*.log) и отправляет их в Loki.

| Действие                          | Пример                                                       |
| --------------------------------- | ------------------------------------------------------------ |
| 🔍 Сканирует лог-файлы            | `/var/log/nginx/access.log`, `journalctl`, контейнерные логи |
| 🏷️ Добавляет метки (labels)       | `job=nginx`, `host=web01`, `filename=access.log`             |
| 📤 Отправляет логи в Loki         | через HTTP API (`/loki/api/v1/push`)                         |
| 🧹 Фильтрует, парсит, форматирует | можно настраивать через `pipelines`                          |


✅ Почему его используют:
Лёгкий и простой (одно бинарное приложение)

Отлично интегрируется с Grafana

Поддерживает Kubernetes (через pod annotations)

Работает без сложной индексации (в отличие от Elastic)


Grafana Loki — это система централизованного хранения и поиска логов, созданная Grafana Labs.
Она работает похоже на Elasticsearch, но с другим подходом: Loki не индексирует содержимое логов, а только метаданные (labels).

🧠 Кратко:
Grafana Loki — это "Prometheus для логов".


🔧 Что делает Loki:
Возможность	Описание
📥 Принимает логи	От агентов (например, Promtail, Fluent Bit, Docker logging driver)
🏷️ Индексирует только метки	Например, job="nginx", host="web01"
🔍 Позволяет искать логи	По временным промежуткам, тексту и меткам
📊 Интегрируется с Grafana	Прямо в интерфейсе можно искать и визуализировать логи
⚡ Очень быстрый и лёгкий	Использует минимум ресурсов по сравнению с ELK (Elastic + Kibana)
📦 Хранит логи в S3, GCS, локально	Может быть распределённым или локальным


🆚 Сравнение с Elastic Stack (ELK):

| Параметр   | Loki                          | Elasticsearch (ELK)                 |
| ---------- | ----------------------------- | ----------------------------------- |
| Индексация | Только **labels**             | Полный текст                        |
| Скорость   | Быстрее при большом объёме    | Может тормозить при большом индексе |
| Хранилище  | Объектное (S3, GCS, файловая) | Требует SSD и память                |
| Интеграция | Идеально с Grafana            | Kibana                              |
| Ресурсы    | Лёгкий, простой               | Тяжёлый, требует Java, много RAM    |
| Установка  | Несложная (Docker, Helm)      | Сложнее                             |


💡 Зачем использовать Loki?
Централизованное логгирование для микросервисов и контейнеров

Альтернатива ELK с меньшими затратами

Интеграция логов и метрик (если используешь Prometheus)


📡 Prometheus — система мониторинга и сбора метрик
Prometheus — это инструмент, который собирает, хранит и анализирует метрики (данные во времени), такие как:

Загрузка CPU

Количество HTTP-запросов

Использование памяти

Аптайм сервисов

Время ответа API

🔧 Что делает Prometheus:
🔁 Периодически опрашивает метрики у сервисов (pull)

📊 Сохраняет метрики как временные ряды (time-series data)

🧠 Позволяет писать запросы на PromQL (язык запросов)

📣 Поддерживает алерты (через Alertmanager)

🚀 Отлично работает с Kubernetes, Docker, FastAPI, Django и др.


📊 Grafana — визуализация метрик, логов и алертов
Grafana — это инструмент для визуализации данных из Prometheus, Loki, PostgreSQL, Elasticsearch и других источников.

🔧 Что делает Grafana:
🎨 Строит дашборды (dashboards) — графики, таблицы, диаграммы

🔍 Позволяет искать логи (если подключён Loki)

🧪 Делает аналитику на лету — ты сам создаёшь графики через UI

🔔 Настраивает уведомления/алерты по условиям (например, если CPU > 90%)

